services:
  eureka:
    build:
      context: .
      dockerfile: Dockerfile.eureka
    ports:
      - "8761:8761"
    networks:
      - network_tasks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  config-server:
    build:
      context: .
      dockerfile: Dockerfile.configServer
    networks:
      - network_tasks
    depends_on:
      - rabbitmq
      - eureka
    entrypoint: ["/bin/sh", "-c", "while ! curl -f http://eureka:8761/actuator/health; do sleep 5; done; exec java -jar /app/config-server-0.0.1-SNAPSHOT.jar"]

  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "9999:9999"
    networks:
      - network_tasks
    depends_on:
      - eureka
      - config-server
    entrypoint: ["/bin/sh", "-c", "while ! curl -f http://eureka:8761/actuator/health; do sleep 5; done; exec java -jar /app/gateway-0.0.1-SNAPSHOT.jar"]
    restart: always  # Adicionando política de reinício

  user-service:
    build:
      context: .
      dockerfile: Dockerfile.userService
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_user_service:3306/dbTaskManagement
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    networks:
      - network_tasks
    depends_on:
      - mysql_user_service
      - rabbitmq
      - eureka
    entrypoint: ["/bin/sh", "-c", "while ! curl -f http://eureka:8761/actuator/health; do sleep 5; done; exec java -jar /app/UserService-0.0.1-SNAPSHOT.jar"]
    restart: always  # Adicionando política de reinício

  project-service:
    build:
      context: .
      dockerfile: Dockerfile.projectService
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_project_service:3306/dbTaskManagement
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    networks:
      - network_tasks
    depends_on:
      - mysql_project_service
      - rabbitmq
      - eureka
    entrypoint: ["/bin/sh", "-c", "while ! curl -f http://eureka:8761/actuator/health; do sleep 5; done; exec java -jar /app/ProjectService-0.0.1-SNAPSHOT.jar"]

  task-service:
    build:
      context: .
      dockerfile: Dockerfile.taskService
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_task_service:3306/dbTaskManagement
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    networks:
      - network_tasks
    depends_on:
      - mysql_task_service
      - rabbitmq
      - eureka
    entrypoint: ["/bin/sh", "-c", "while ! curl -f http://eureka:8761/actuator/health; do sleep 5; done; exec java -jar /app/TaskService-0.0.1-SNAPSHOT.jar"]

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile.notificationService
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_notification_service:3306/dbTaskManagement
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    networks:
      - network_tasks
    depends_on:
      - mysql_notification_service
      - rabbitmq
      - eureka
    entrypoint: ["/bin/sh", "-c", "while ! curl -f http://eureka:8761/actuator/health; do sleep 5; done; exec java -jar /app/Notification-0.0.1-SNAPSHOT.jar"]

  mysql_user_service:
    image: mysql:latest
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: dbTaskManagement
    networks:
      - network_tasks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5

  mysql_project_service:
    image: mysql:latest
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: dbTaskManagement
    networks:
      - network_tasks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5

  mysql_task_service:
    image: mysql:latest
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: dbTaskManagement
    networks:
      - network_tasks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5

  mysql_notification_service:
    image: mysql:latest
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: dbTaskManagement
    networks:
      - network_tasks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"  # Porta para comunicação com RabbitMQ
      - "15672:15672"  # Porta para a interface de gerenciamento do RabbitMQ
    networks:
      - network_tasks

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - network_tasks

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - network_tasks
    volumes:
      - grafana-data:/var/lib/grafana

networks:
  network_tasks:
    driver: bridge

volumes:
  grafana-data:
